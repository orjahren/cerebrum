#!/usr/bin/env python
# -*- coding: utf-8 -*-

import re
import sys
import getopt
import os

from Cerebrum.Utils import Factory
from import_dns import ForwardMap, RevMap
#header_splitter = '; AUTOGENERATED: do not edit below this line\n'
default_header_splitter = '; Alt over dette er _head'

def strip_zone_file(fname, outfname, default_zone,
                    header_splitter=default_header_splitter):
    parser = ForwardMap(fname, default_zone, header_splitter)
    p = os.popen("sort > %s" % outfname, 'w')
    while True:
        dta = parser.next_zone_entry()
        if not dta:
            break
        if dta[0] != 'contact':
            p.write(str((parser.owner, dta[:-1]))+"\n")
    p.close()

def strip_reverse_file(fname, outfname, default_zone):
    p = os.popen("sort > %s" % outfname, 'w')
    parser = RevMap(fname, default_zone)
    while True:
        dta = parser.next_revmap()
        if not dta[0]:
            break
        p.write(str(dta)+"\n")
    p.close()

def usage(exitcode=0):
    print """Usage: [options]

    Convert the file to a format suitable for 'diff -u'.

    --help: help
    -i filename: input filename
    -o filename: output filename
    -z convert zonefile
    -r convert reverse map
    -Z | --zone-def name: a dns_zone.name entry
    """
    sys.exit(exitcode)

def main():
    global zone
    try:
        opts, args = getopt.getopt(sys.argv[1:], 'Z:i:o:zrH:', [
            'help',])
    except getopt.GetoptError:
        usage(1)
    if not opts:
        usage(1)

    header_splitter=default_header_splitter
    db = Factory.get('Database')()
    co = Factory.get('Constants')(db)
    for opt, val in opts:
        if opt in ('--help', ):
            usage()
        elif opt in ('-i',):
            infile = val
        elif opt in ('-o',):
            outfile = val
        elif opt in ('-H',):
            header_splitter = val
        elif opt in ('-z',):
            strip_zone_file(infile, outfile, zone, header_splitter=header_splitter)
        elif opt in ('--zone-def', '-Z'):
            zone = co.DnsZone(val)
            int(zone) # Trigger error if missing
        elif opt in ('-r',):
            strip_reverse_file(infile, outfile, zone)

if __name__ == '__main__':
    main()

