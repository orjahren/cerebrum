# This could be a global logging file for Cerebrum.  All messages of
# level WARN and above are logged to a central log, while the various
# applications may use different logg-levels and files.  For testing,
# the console logger can be used.  It doesn't propagate log messages.

# Note: When propagating messages to other loggers, the handler level
# is used to determine wheter to log or not. For a logger propagating
# messages to its parent, do NOT set the level to NOTSET (otherwise
# the logger will assume the level of its parent.

# This is a common log for every script in Cerebrum, it should not
# be used directly.
[logger_root]
level=WARN
channel=
qualname=root
handlers=hand_root_error,hand_root_warn

# cronjob should be the normal logger for Cerebrum tasks.  It will log
# to a different directory for every script, with automatic rotation
# of old logs.  Messages are copied to the root logger.
[logger_cronjob]
level=DEBUG
propagate=1
channel=cronjob
qualname=cronjob
handlers=hand_cronjob

# console should be used for interactive testing only.  Notice that
# these log messages are not copied into the root logger.
[logger_console]
level=NOTSET
propagate=0
qualname=console
handlers=hand_console

# tee is both logging as cronjob and console. Notice that it logs all log
# levels.
[logger_tee]
level=NOTSET
propagate=0
qualname=tee
handlers=hand_cronjob,hand_console

[logger_bofhd]
level=DEBUG
propagate=1
qualname=bofhd
#handlers=hand_bofhd1,hand_bofhd2
handlers=hand_bofhd2

# We need to have the same server (bofhd, essentially) write to a different
# file, so that bofhd and bofhd-for-epay won't end up writing to the same
# location.
[logger_big_shortlived]
level=DEBUG
propagate=1
channel=big_shortlived
qualname=big_shortlived
handlers=hand_big_shortlived

# process_students & friends get their own special logger. 
[logger_studauto]
level=DEBUG5
propagate=1
qualname=studauto
handlers=hand_studauto

[logger_bofhd_req]
level=DEBUG5
propagate=1
qualname=bofhd_req
handlers=hand_bofhd_req

# Logger for the new AD sync
[logger_ad2_usersync]
level=DEBUG
propagate=1
qualname=ad2_usersync
handlers=hand_ad2_usersync
[logger_ad2_passwordsync]
level=DEBUG
propagate=1
qualname=ad2_passwordsync
handlers=hand_ad2_passwordsync
[logger_ad2_groupsync]
level=DEBUG
propagate=1
qualname=ad2_groupsync
handlers=hand_ad2_groupsync
[logger_ad2_consentsync]
level=DEBUG
propagate=1
qualname=ad2_consentsync
handlers=hand_ad2_consentsync
[logger_ad2_consentquicksync]
level=DEBUG
propagate=1
qualname=ad2_consentquicksync
handlers=hand_ad2_consentquicksync
[logger_ad2_xpand]
level=DEBUG  
propagate=1  
qualname=ad2_xpand
handlers=hand_ad2_xpand

# We want to use different loggers for user and group sync even though
# they both use the same sync. script
[logger_ad_usersync]
level=DEBUG
propagate=1
qualname=ad_usersync
handlers=hand_ad_usersync

[logger_ad_groupsync]
level=DEBUG
propagate=1
qualname=ad_groupsync
handlers=hand_ad_groupsync

[logger_ephorte_kurs_full]
level=DEBUG
propagate=1
qualname=ephorte_kurs_full
handlers=hand_ephorte_kurs_full

[logger_ephorte_kurs_quick]
level=DEBUG
propagate=1
qualname=ephorte_kurs_quick
handlers=hand_ephorte_kurs_quick

[logger_ephorte_kurs_person]
level=DEBUG
propagate=1
qualname=ephorte_kurs_person
handlers=hand_ephorte_kurs_person

[logger_ephorte_person]
level=DEBUG
propagate=1
qualname=ephorte_person
handlers=hand_ephorte_person

[logger_ephorte_disable]
level=DEBUG
propagate=1
qualname=ephorte_disable
handlers=hand_ephorte_disable

[logger_cim_wstest]
level=DEBUG
propagate=1
qualname=cim_wstest
handlers=hand_cim_wstest

# 
# The root logger has two handlers -- one scanned continuously with
# only errors; the other with WARN and higher which is scanned on
# daily basis.
[handler_hand_root_warn]
class=DelayedFileHandler
level=WARN
formatter=form_root
args=(os.path.join(cereconf.LOGGING_ROOT_DIR, 'rootwarn.log'), 'a+', 'utf-8')

[handler_hand_root_error]
class=DelayedFileHandler
level=ERROR
formatter=form_root
args=(os.path.join(cereconf.LOGGING_ROOT_DIR, 'rooterror.log'), 'a+', 'utf-8')

[handler_hand_cronjob]
class=CerebrumRotatingHandler
level=NOTSET
formatter=form_cronjob
args=(cereconf.LOGGING_ROOT_DIR, 'a+', 20*1024*1024, 9, 'utf-8')

[handler_hand_console]
class=StreamHandler
level=NOTSET
formatter=form_console
args=(sys.stdout,)

[handler_hand_bofhd2]
class=CerebrumSubstituteHandler
level=NOTSET
formatter=form_bofhd
args=(cereconf.LOGGING_ROOT_DIR, 50*1024*1024, 5, 0644,
      ((r"(misc_verify_password \(\('.*?', ').+?('\)\))", r"\1secret\2"),
       (r"(misc_check_password \(\(').*?(',\)\))", r"\1secret\2"),
       (r"(user_password \(\('[^']+', ').*?('\)\))", r"\1secret\2"),
       (r"(params=\('[^']+', )'.+?'(\), method=u'login')", r"\1secret\2")),
       'utf-8')

# What we want here is a handler that rotates by date.  Unfortunately
# we currently don't have such a handler.
[handler_hand_big_shortlived]
class=CerebrumRotatingHandler
level=NOTSET
formatter=form_cronjob
args=(cereconf.LOGGING_ROOT_DIR, 'a+', 50*1024*1024, 9, 'utf-8')

# Regardless the log size, each job run gets its own file (tagged with
# a timestamp)
[handler_hand_studauto]
class=OneRunHandler
level=NOTSET
formatter=form_studauto
args=(os.path.join(cereconf.LOGGING_ROOT_DIR, 'studentautomatikk'), 'w', 'utf-8')

[handler_hand_bofhd_req]
class=OneRunHandler
level=NOTSET
formatter=form_cronjob
args=(os.path.join(cereconf.LOGGING_ROOT_DIR, 'process_bofhd_requests'), 'a', 'utf-8')

# Handlers for the new AD sync
[handler_hand_ad2_usersync]
class=CerebrumSubstituteHandler
level=NOTSET
formatter=form_cronjob
args=(cereconf.LOGGING_ROOT_DIR, 50*1024*1024, 5, 0644, 
      ((r"(ProtocolError:.*?cerebrum:)(.*?)(@.*)", r"\1<secret>\3"),),
      'utf-8', '', 'ad2_usersync.log')
[handler_hand_ad2_passwordsync]
class=CerebrumSubstituteHandler
level=NOTSET
formatter=form_cronjob
args=(cereconf.LOGGING_ROOT_DIR, 50*1024*1024, 5, 0644, 
      ((r"(ProtocolError:.*?cerebrum:)(.*?)(@.*)", r"\1<secret>\3"),),
      'utf-8', '', 'ad2_passwordsync.log')
[handler_hand_ad2_groupsync]
class=CerebrumSubstituteHandler
level=NOTSET
formatter=form_cronjob
args=(cereconf.LOGGING_ROOT_DIR, 50*1024*1024, 5, 0644, 
      ((r"(ProtocolError:.*?cerebrum:)(.*?)(@..*)", r"\1<secret>\3"),),
      'utf-8', '', 'ad2_groupsync.log')
[handler_hand_ad2_consentsync]
class=CerebrumSubstituteHandler
level=NOTSET
formatter=form_cronjob
args=(cereconf.LOGGING_ROOT_DIR, 50*1024*1024, 5, 0644,
      ((r"(ProtocolError:.*?cerebrum:)(.*?)(@.*)", r"\1<secret>\3"),),
      'utf-8', '', 'ad2_consentsync.log')
[handler_hand_ad2_consentquicksync]
class=CerebrumSubstituteHandler
level=NOTSET
formatter=form_cronjob
args=(cereconf.LOGGING_ROOT_DIR, 50*1024*1024, 5, 0644,
      ((r"(ProtocolError:.*?cerebrum:)(.*?)(@.*)", r"\1<secret>\3"),),
      'utf-8', '', 'ad2_consentquicksync.log')
[handler_hand_ad2_xpand]
class=CerebrumSubstituteHandler
level=NOTSET  
formatter=form_cronjob
args=(cereconf.LOGGING_ROOT_DIR, 50*1024*1024, 5, 0644, 
      ((r"(ProtocolError:.*?cerebrum:)(.*?)(@.*)", r"\1<secret>\3"),),
      'utf-8', '', 'ad2_xpand_gruppesync.log')


# Handlers for ad loggers. Make sure passwords are not written to log
# files
[handler_hand_ad_usersync]
class=CerebrumSubstituteHandler
level=NOTSET
formatter=form_cronjob
args=(cereconf.LOGGING_ROOT_DIR, 50*1024*1024, 5, 0644, 
      ((r"(ProtocolError:.*?cerebrum:)(.*?)(@.*)", r"\1<secret>\3"),),
      'utf-8', '', 'usersync.log')

[handler_hand_ad_groupsync]
class=CerebrumSubstituteHandler
level=NOTSET
formatter=form_cronjob
args=(cereconf.LOGGING_ROOT_DIR, 50*1024*1024, 5, 0644, 
      ((r"(ProtocolError:.*?cerebrum:)(.*?)(@..*)", r"\1<secret>\3"),),
      'utf-8', '', 'groupsync.log')

[handler_hand_ephorte_kurs_full]
class=CerebrumRotatingHandler
level=NOTSET
formatter=form_cronjob
args=(cereconf.LOGGING_ROOT_DIR, 'a+', 20*1024*1024, 9, 'utf-8', '', 'kurs_full_log')


[handler_hand_ephorte_kurs_quick]
class=CerebrumRotatingHandler
level=ERROR
formatter=form_cronjob
args=(cereconf.LOGGING_ROOT_DIR, 'a+', 20*1024*1024, 9, 'utf-8', '', 'kurs_quick_log')


[handler_hand_ephorte_kurs_person]
class=CerebrumRotatingHandler
level=NOTSET
formatter=form_cronjob
args=(cereconf.LOGGING_ROOT_DIR, 'a+', 20*1024*1024, 9, 'utf-8', '', 'kurs_person_log')

[handler_hand_ephorte_person]
class=CerebrumRotatingHandler
level=NOTSET
formatter=form_cronjob
args=(cereconf.LOGGING_ROOT_DIR, 'a+', 20*1024*1024, 9, 'utf-8', '', 'person_log')

[handler_hand_ephorte_disable]
class=CerebrumRotatingHandler
level=NOTSET
formatter=form_cronjob
args=(cereconf.LOGGING_ROOT_DIR, 'a+', 20*1024*1024, 9, 'utf-8', '', 'disable_log')

[handler_hand_cim_wstest]
class=CerebrumRotatingHandler
level=NOTSET
formatter=form_cronjob
args=(cereconf.LOGGING_ROOT_DIR, 'a+', 20*1024*1024, 9, 'utf-8', '', 'cim_wstest')

[formatter_form_root]
format=%(asctime)s %(filename)s[%(process)d]: %(levelname)s %(message)s
datefmt=%F %T

[formatter_form_cronjob]
format=%(asctime)s %(levelname)s %(message)s
datefmt=%F %T

[formatter_form_console]
format=%(levelname)s %(asctime)s %(message)s
datefmt=%F %T

# Indenting helps humans visualize hierarchical information
[formatter_form_studauto]
format=%(indent)s%(message)s
datefmt=%F %T

[formatter_form_bofhd]
format=%(asctime)s %(levelname)s [%(threadName)s] %(message)s
datefmt=%F %T
