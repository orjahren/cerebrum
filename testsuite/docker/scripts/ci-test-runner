#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Copyright 2018 University of Oslo, Norway
#
# This file is part of Cerebrum.
#
# Cerebrum is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# Cerebrum is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Cerebrum; if not, write to the Free Software Foundation,
# Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.

import sys
import asyncio
from asyncio.subprocess import DEVNULL


async def start_test_container(instance):
    print('Launching test-container:Â {}..'.format(instance))
    proc = await asyncio.create_subprocess_exec(
        *['docker-compose', '-f', 'docker-compose.ci.yml', 'run', '--rm',
          instance],
        stdout=DEVNULL,
        stderr=DEVNULL)
    await proc.wait()
    if proc.returncode == 0:
        print('Test-container {} finished successfully.'.format(instance))
    else:
        print('Test-container {} failed.'.format(instance))
    return proc.returncode

def main():
    instances = sys.argv[1:]
    print(instances)
    loop = asyncio.get_event_loop()
    all_tasks = asyncio.gather(*[start_test_container(inst) for inst in instances])
    print('Launching all test-containers...')
    results = loop.run_until_complete(all_tasks)
    loop.close()
    for result in results:
        if result != 0:
            print('One or more test-container(s) failed.')
            sys.exit(1)
    print('All test-containers finished successfully.')


if __name__ == '__main__':
    main()

